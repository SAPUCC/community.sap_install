# SPDX-License-Identifier: Apache-2.0
---
- name: Populate service facts
  ansible.builtin.service_facts:

- name: Assert that saptune is running and enabled
  ansible.builtin.assert:
    that:
      - "ansible_facts.services['saptune.service'].state == 'running'"
      - "ansible_facts.services['saptune.service'].status == 'enabled'"
    fail_msg: "FAIL: the service 'saptune' is not configured as expected"
    success_msg: "PASS: the service 'saptune' is configured as expected"

- name: Run saptune_check
  ansible.builtin.command: saptune_check
  register: __sap_hana_preconfigure_register_saptune_check
  changed_when: false
  failed_when: false

- name: Assert that saptune_check executed correctly
  ansible.builtin.assert:
    that: __sap_hana_preconfigure_register_saptune_check.rc == 0
    fail_msg: "FAIL: the command saptune_check fails"
    success_msg: "PASS: the command saptune_check executes as expected"

- name: Discover active solution
  ansible.builtin.command: saptune solution enabled
  register: __sap_hana_preconfigure_register_saptune_status
  changed_when: false

- name: Set solution fact
  ansible.builtin.set_fact:
    __sap_hana_preconfigure_saptune_configured_solution:
      "{{ (__sap_hana_preconfigure_register_saptune_status.stdout | regex_search('(\\S+)', '\\1'))[0] | default('NONE') }}"

- name: Assert that active solution is the expected solution
  ansible.builtin.assert:
    that: __sap_hana_preconfigure_saptune_configured_solution == sap_hana_preconfigure_saptune_solution
    fail_msg: "FAIL: the configured saptune solution is '{{ __sap_hana_preconfigure_saptune_configured_solution
      }}'' and does not match the expected solution '{{ sap_hana_preconfigure_saptune_solution }}'"
    success_msg: "PASS: the configured saptune solution matches the expected solution '{{ sap_hana_preconfigure_saptune_solution }}'"
