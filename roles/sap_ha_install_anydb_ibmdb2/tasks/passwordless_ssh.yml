---

- name: SAP HA AnyDB - IBM Db2 HADR - Ansible Task Block for passwordless SSH between AnyDB Primary and Secondary
  when: (sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short) or (sap_ha_install_anydb_ibmdb2_hostname_secondary == inventory_hostname_short)
  block:

    - name: SAP HA AnyDB - IBM Db2 HADR - Create .ssh if missing - root user
      ansible.builtin.file:
        path: /root/.ssh
        mode: "0700"
        state: directory

    - name: SAP HA AnyDB - IBM Db2 HADR - Create .ssh if missing - IBM Db2 Database Administrator
      ansible.builtin.file:
        path: /db2/db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}/.ssh
        mode: "0700"
        state: directory
        owner: db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}
        group: db{{ sap_ha_install_anydb_ibmdb2_sid | lower }}adm

    - name: SAP HA AnyDB - IBM Db2 HADR - Perform ssh-keygen if required
      ansible.builtin.shell: |
        [[ ! -f /root/.ssh/anydb_ibmdb2_hadr_{{ inventory_hostname_short }} ]] && \
        [[ ! -f /root/.ssh/anydb_ibmdb2_hadr_{{ inventory_hostname_short }}.pub ]] && \
        ssh-keygen -t rsa -f /root/.ssh/anydb_ibmdb2_hadr_{{ inventory_hostname_short }} -N "" -q &&
      args:
        creates: /root/.ssh/anydb_ibmdb2_hadr_{{ inventory_hostname_short }}.pub
      failed_when: false

    - name: SAP HA AnyDB - IBM Db2 HADR - Copy key files from root user if does not exist
      ansible.builtin.shell: |
        [[ ! -f /db2/db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}/.ssh/anydb_ibmdb2_hadr_{{ inventory_hostname_short }} ]] || \
        [[ ! -f /db2/db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}/.ssh/anydb_ibmdb2_hadr_{{ inventory_hostname_short }}.pub ]] && \
        cp -f /root/.ssh/anydb_ibmdb2_hadr* /db2/db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}/.ssh
      args:
        creates: /db2/db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}/.ssh/anydb_ibmdb2_hadr_{{ inventory_hostname_short }}.pub
      failed_when: false

    - name: SAP HA AnyDB - IBM Db2 HADR - Ensure key file exists - root user
      ansible.builtin.file:
        path: "{{ item }}"
        state: file
      loop:
        - "/root/.ssh/anydb_ibmdb2_hadr_{{ inventory_hostname_short }}"
        - "/root/.ssh/anydb_ibmdb2_hadr_{{ inventory_hostname_short }}.pub"

    - name: SAP HA AnyDB - IBM Db2 HADR - Ensure key file exists with correct file permissions - IBM Db2 Database Administrator
      ansible.builtin.file:
        path: "{{ item }}"
        state: file
        owner: db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}
        group: db{{ sap_ha_install_anydb_ibmdb2_sid | lower }}adm
      loop:
        - "/db2/db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}/.ssh/anydb_ibmdb2_hadr_{{ inventory_hostname_short }}"
        - "/db2/db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}/.ssh/anydb_ibmdb2_hadr_{{ inventory_hostname_short }}.pub"

    - name: SAP HA AnyDB - IBM Db2 HADR - Get SSH fingerprint of SAP AnyDB Primary node
      ansible.builtin.shell: |
        ssh-keyscan -t rsa {{ sap_ha_install_anydb_ibmdb2_hostname_primary }}
      register: __sap_ha_install_anydb_ibmdb2_primary_ssh_fingerprint
      when: sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short

    - name: SAP HA AnyDB - IBM Db2 HADR - Get SSH fingerprint pf SAP AnyDB Secondary node
      ansible.builtin.shell: |
        ssh-keyscan -t rsa {{ sap_ha_install_anydb_ibmdb2_hostname_secondary }}
      register: __sap_ha_install_anydb_ibmdb2_secondary_ssh_fingerprint
      when: sap_ha_install_anydb_ibmdb2_hostname_secondary == inventory_hostname_short


    - name: SAP HA AnyDB - IBM Db2 HADR - Get contents of SSH Public Key for SAP AnyDB Primary node
      ansible.builtin.shell: |
        cat /root/.ssh/anydb_ibmdb2_hadr_{{ inventory_hostname_short }}.pub
      register: __sap_ha_install_anydb_ibmdb2_primary_pubkey
      when: sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short

    - name: SAP HA AnyDB - IBM Db2 HADR - Get contents of SSH Public Key for SAP AnyDB Secondary node
      ansible.builtin.shell: |
        cat /root/.ssh/anydb_ibmdb2_hadr_{{ inventory_hostname_short }}.pub
      register: __sap_ha_install_anydb_ibmdb2_secondary_pubkey
      when: sap_ha_install_anydb_ibmdb2_hostname_secondary == inventory_hostname_short


    - name: SAP HA AnyDB - IBM Db2 HADR - Inject SAP AnyDB Secondary node SSH Fingerprint to SSH known_hosts file on SAP AnyDB Primary node - root user
      ansible.builtin.lineinfile:
        backup: true
        create: true
        line: "{{ hostvars[sap_ha_install_anydb_ibmdb2_hostname_secondary].__sap_ha_install_anydb_ibmdb2_secondary_ssh_fingerprint.stdout }}"
        mode: "0600"
        path: /root/.ssh/known_hosts
      when: sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short

    - name: SAP HA AnyDB - IBM Db2 HADR - Inject SAP AnyDB Secondary node SSH Fingerprint to SSH known_hosts file on SAP AnyDB Primary node - IBM Db2 Database Administrator
      ansible.builtin.lineinfile:
        backup: true
        create: true
        line: "{{ hostvars[sap_ha_install_anydb_ibmdb2_hostname_secondary].__sap_ha_install_anydb_ibmdb2_secondary_ssh_fingerprint.stdout }}"
        mode: "0600"
        path: /db2/db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}/.ssh/known_hosts
        owner: db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}
        group: db{{ sap_ha_install_anydb_ibmdb2_sid | lower }}adm
      when: sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short

    - name: SAP HA AnyDB - IBM Db2 HADR - Inject SSH Public Key to SSH authorized_keys file on SAP AnyDB Primary node - root user
      ansible.builtin.lineinfile:
        backup: true
        create: true
        line: "{{ hostvars[sap_ha_install_anydb_ibmdb2_hostname_secondary].__sap_ha_install_anydb_ibmdb2_secondary_pubkey.stdout }}"
        mode: "0600"
        path: /root/.ssh/authorized_keys
      when: sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short

    - name: SAP HA AnyDB - IBM Db2 HADR - Inject SSH Public Key to SSH authorized_keys file on SAP AnyDB Primary node - IBM Db2 Database Administrator
      ansible.builtin.lineinfile:
        backup: true
        create: true
        line: "{{ hostvars[sap_ha_install_anydb_ibmdb2_hostname_secondary].__sap_ha_install_anydb_ibmdb2_secondary_pubkey.stdout }}"
        mode: "0600"
        path: /db2/db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}/.ssh/authorized_keys
        owner: db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}
        group: db{{ sap_ha_install_anydb_ibmdb2_sid | lower }}adm
      when: sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short

    # Avoid use of default id_rsa file or SSH Agent (ssh-add)
    - name: SAP HA AnyDB - IBM Db2 HADR - Update Passwordless SSH login from SAP AnyDB Primary node to SAP AnyDB Secondary node - root user
      ansible.builtin.blockinfile:
        backup: true
        create: true
        path: /root/.ssh/config
        block: |
          Host {{ hostvars[sap_ha_install_anydb_ibmdb2_hostname_secondary].ansible_default_ipv4.address }} {{ sap_ha_install_anydb_ibmdb2_hostname_secondary }}
              IdentityFile /root/.ssh/anydb_ibmdb2_hadr_{{ sap_ha_install_anydb_ibmdb2_hostname_primary }}
      when: sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short

    # Avoid use of default id_rsa file or SSH Agent (ssh-add)
    - name: SAP HA AnyDB - IBM Db2 HADR - Update Passwordless SSH login from SAP AnyDB Primary node to SAP AnyDB Secondary node - IBM Db2 Database Administrator
      ansible.builtin.blockinfile:
        backup: true
        create: true
        path: /db2/db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}/.ssh/config
        block: |
          Host {{ hostvars[sap_ha_install_anydb_ibmdb2_hostname_secondary].ansible_default_ipv4.address }} {{ sap_ha_install_anydb_ibmdb2_hostname_secondary }}
              IdentityFile /db2/db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}/.ssh/anydb_ibmdb2_hadr_{{ sap_ha_install_anydb_ibmdb2_hostname_primary }}
        owner: db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}
        group: db{{ sap_ha_install_anydb_ibmdb2_sid | lower }}adm
      when: sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short


    - name: SAP HA AnyDB - IBM Db2 HADR - Inject SAP AnyDB Primary node SSH Fingerprint to SSH known_hosts file on SAP AnyDB Primary node - root user
      ansible.builtin.lineinfile:
        backup: true
        create: true
        line: "{{ hostvars[sap_ha_install_anydb_ibmdb2_hostname_primary].__sap_ha_install_anydb_ibmdb2_primary_ssh_fingerprint.stdout }}"
        mode: "0600"
        path: /root/.ssh/known_hosts
      when: sap_ha_install_anydb_ibmdb2_hostname_secondary == inventory_hostname_short

    - name: SAP HA AnyDB - IBM Db2 HADR - Inject SAP AnyDB Primary node SSH Fingerprint to SSH known_hosts file on SAP AnyDB Primary node - IBM Db2 Database Administrator
      ansible.builtin.lineinfile:
        backup: true
        create: true
        line: "{{ hostvars[sap_ha_install_anydb_ibmdb2_hostname_primary].__sap_ha_install_anydb_ibmdb2_primary_ssh_fingerprint.stdout }}"
        mode: "0600"
        path: /db2/db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}/.ssh/known_hosts
        owner: db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}
        group: db{{ sap_ha_install_anydb_ibmdb2_sid | lower }}adm
      when: sap_ha_install_anydb_ibmdb2_hostname_secondary == inventory_hostname_short

    - name: SAP HA AnyDB - IBM Db2 HADR - Inject SSH Public Key to SSH authorized_keys file on SAP AnyDB Secondary node (authentication method publickey) - root user
      ansible.builtin.lineinfile:
        backup: true
        create: true
        line: "{{ hostvars[sap_ha_install_anydb_ibmdb2_hostname_primary].__sap_ha_install_anydb_ibmdb2_primary_pubkey.stdout }}"
        mode: "0600"
        path: /root/.ssh/authorized_keys
      when: sap_ha_install_anydb_ibmdb2_hostname_secondary == inventory_hostname_short

    - name: SAP HA AnyDB - IBM Db2 HADR - Inject SSH Public Key to SSH authorized_keys file on SAP AnyDB Secondary node (authentication method publickey) - IBM Db2 Database Administrator
      ansible.builtin.lineinfile:
        backup: true
        create: true
        line: "{{ hostvars[sap_ha_install_anydb_ibmdb2_hostname_primary].__sap_ha_install_anydb_ibmdb2_primary_pubkey.stdout }}"
        mode: "0600"
        path: /db2/db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}/.ssh/authorized_keys
        owner: db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}
        group: db{{ sap_ha_install_anydb_ibmdb2_sid | lower }}adm
      when: sap_ha_install_anydb_ibmdb2_hostname_secondary == inventory_hostname_short

    # Avoid use of default id_rsa file or SSH Agent (ssh-add)
    - name: SAP HA AnyDB - IBM Db2 HADR - Update Passwordless SSH login from SAP AnyDB Secondary node to SAP AnyDB Primary node (authentication method publickey) - root user
      ansible.builtin.blockinfile:
        backup: true
        create: true
        path: /root/.ssh/config
        block: |
          Host {{ hostvars[sap_ha_install_anydb_ibmdb2_hostname_primary].ansible_default_ipv4.address }} {{ sap_ha_install_anydb_ibmdb2_hostname_primary }}
              IdentityFile /root/.ssh/anydb_ibmdb2_hadr_{{ sap_ha_install_anydb_ibmdb2_hostname_secondary }}
      when: sap_ha_install_anydb_ibmdb2_hostname_secondary == inventory_hostname_short

    # Avoid use of default id_rsa file or SSH Agent (ssh-add)
    - name: SAP HA AnyDB - IBM Db2 HADR - Update Passwordless SSH login from SAP AnyDB Secondary node to SAP AnyDB Primary node (authentication method publickey) - IBM Db2 Database Administrator
      ansible.builtin.blockinfile:
        backup: true
        create: true
        path: /db2/db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}/.ssh/config
        block: |
          Host {{ hostvars[sap_ha_install_anydb_ibmdb2_hostname_primary].ansible_default_ipv4.address }} {{ sap_ha_install_anydb_ibmdb2_hostname_primary }}
              IdentityFile /db2/db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}/.ssh/anydb_ibmdb2_hadr_{{ sap_ha_install_anydb_ibmdb2_hostname_secondary }}
        owner: db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}
        group: db{{ sap_ha_install_anydb_ibmdb2_sid | lower }}adm
      when: sap_ha_install_anydb_ibmdb2_hostname_secondary == inventory_hostname_short
