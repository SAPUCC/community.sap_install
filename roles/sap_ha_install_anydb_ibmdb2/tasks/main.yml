---

# IBM Db2 with an Integrated Cluster Manager have various options. See IBM Db2 Supported cluster management software - https://www.ibm.com/docs/en/db2/11.5?topic=clustering-supported-cluster-management-software
# IBM Db2 with “Integrated Linux Pacemaker” can use two deployment models, either High Availability and Disaster Recovery (HADR) option for Idle Standby or Mutual Failover option

# Execute IBM Db2 with “Integrated Linux Pacemaker” using Resource Agents db2ethmon, db2inst (HADR), db2hadr (HADR), db2partition and db2fs
# HA Deployment Model: High Availability and Disaster Recovery (HADR) for Idle Standby
# Configurations performed for: root OS user, IBM Db2 Database Administrator OS user (e.g. db2<db2_sid>)
# Configurations executed on: AnyDB Primary Node, AnyDB Secondary Node

# See SAP Note 1555903 - DB6: Supported IBM Db2 Database Features
# See SAP Note 3100330 - DB6: Using Db2 HADR with Pacemaker Cluster Software
# See SAP Note 3100287 - DB6: Db2 Support for Pacemaker Cluster Software
# See IBM Db2 for SAP HADR reference document referred from sap.com - https://ibm.github.io/db2-hadr-wiki/
# See Admin documentation for IBM Db2 with Integrated Cluster Manager (Linux Pacemaker) - https://www.ibm.com/docs/en/db2/11.5?topic=feature-integrated-solution-using-pacemaker
# See Installation documentation for IBM Db2 with Integrated Cluster Manager (Linux Pacemaker) - https://www.ibm.com/docs/en/db2/11.5?topic=manager-installing-pacemaker-cluster


# Determine if we are on a cloud platform.
- name: "SAP HA Prepare Pacemaker - Include tasks for platform detection"
  ansible.builtin.import_tasks: platform/ascertain_platform_type.yml

# See IBM Db2 documentation 'HADR and network address translation (NAT) support' - https://www.ibm.com/docs/en/db2/11.5?topic=support-hadr-nat
- name: Append IBM Db2 HA Ports to /etc/services
  ansible.builtin.lineinfile:
    path: /etc/services
    line: "{{ item }}"
    state: present
  loop:
    - "{{ sap_ha_install_anydb_ibmdb2_sid }}_HADR_1\t55001/tcp\t# DB2 HA Port 1" # DB2 HADR local service (env var db2hadrlocalsvc / HADR_LOCAL_SVC)
    - "{{ sap_ha_install_anydb_ibmdb2_sid }}_HADR_2\t55002/tcp\t# DB2 HA Port 2" # DB2 HADR remote service (env var db2hadrremotesvc / HADR_REMOTE_SVC)
  when: (sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short) or (sap_ha_install_anydb_ibmdb2_hostname_secondary == inventory_hostname_short)

- name: "SAP HA Prepare Pacemaker - Include tasks for Passwordless SSH"
  ansible.builtin.import_tasks: passwordless_ssh.yml


- name: Ansible Task Block for IBM Db2 “Integrated Linux Pacemaker” configuration
  when: (sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short) or (sap_ha_install_anydb_ibmdb2_hostname_secondary == inventory_hostname_short)
  block:

    # IBM Db2 LUW for SAP installation media includes already extracted Db2_*_Pacemaker_*_<<RHEL/SLES>><<pcmk_version>>_<<cpu_arch>>.tar.gz
    # Default install file is /install_media/LINUXX86_64/ESE/disk1/db2/linuxamd64/pcmk/db2installPCMK
    # Default RPM directory is /install_media/LINUXX86_64/ESE/disk1/db2/linuxamd64/pcmk/Linux
    # Default SRPM (Source) directory is /install_media/LINUXX86_64/ESE/disk1/db2/linuxamd64/pcmk/Linux/SRPMS
    - name: Identify IBM Db2 installation media with 'Integrated Linux Pacemaker' RPMs subdirectory
      ansible.builtin.find:
        paths: "{{ sap_ha_install_anydb_ibmdb2_software_directory }}"
        recurse: true
        file_type: file
        patterns: db2installPCMK
        excludes: bin
      register: __sap_ha_install_anydb_ibmdb2_pcmk

    - name: List all IBM Db2 'Integrated Linux Pacemaker' RPMs in subdirectory
      ansible.builtin.find:
        paths: "{{ (__sap_ha_install_anydb_ibmdb2_pcmk.files[0].path | dirname) + '/Linux/' + ('rhel' if ansible_os_family == 'RedHat' else 'suse' if ansible_os_family == 'Suse') }}"
        recurse: true
        file_type: file
        patterns: "*.rpm"
      register: __sap_ha_install_anydb_ibmdb2_pcmk_rpm_files

    - name: Install all IBM Db2 'Integrated Linux Pacemaker' RPMs for RHEL
      ansible.builtin.dnf:
        name: "{{ __sap_ha_install_anydb_ibmdb2_pcmk_rpm_files.files | map(attribute='path') | list}}"
        state: present
        disable_gpg_check: true
      when: ansible_os_family == 'RedHat'

    - name: Install all IBM Db2 'Integrated Linux Pacemaker' RPMs for SLES
      community.general.zypper:
        name: "{{ __sap_ha_install_anydb_ibmdb2_pcmk_rpm_files.files | map(attribute='path') | list}}"
        state: present
        disable_gpg_check: true
      when: ansible_os_family == 'Suse'

    # SAP Note 3100287 - DB6: Db2 Support for Pacemaker Cluster Software
    - name: Verify IBM Db2 'Integrated Linux Pacemaker' is installed
      register: __sap_ha_install_anydb_ibmdb2_pcmk_version_check
      ansible.builtin.shell: |
        rpm -q corosync | grep -I db2pcmk
        rpm -q pacemaker | grep -I db2pcmk
        rpm -q crmsh | grep -I db2pcmk

    - name: Display IBM Db2 'Integrated Linux Pacemaker' installation details
      ansible.builtin.debug:
        msg: "{{ __sap_ha_install_anydb_ibmdb2_pcmk_version_check.stdout_lines }}"

    - name: Identify IBM Db2 cluster manager (db2cm) utility
      ansible.builtin.find:
        paths: /db2
        recurse: true
        file_type: file
        patterns: db2cm
      register: __sap_anydb_ibmdb2_db2cm

    - name: Ensure directory for db2cm binary
      ansible.builtin.file:
        path: /db2/db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}/sqllib/bin
        mode: "0755"
        state: directory

    - name: Copy db2cm binary to binary path
      ansible.builtin.copy:
        src: "{{ __sap_anydb_ibmdb2_db2cm.files[0].path }}"
        remote_src: true
        dest: /db2/db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}/sqllib/bin
        mode: '0755'

    # - name: Verify /usr/lib/ocf/resource.d/heartbeat contains Db2agents (db2hadr, db2inst, db2ethmon)

    - name: Execute db2installPCMK shell script
      ansible.builtin.shell: |
        {{__sap_ha_install_anydb_ibmdb2_pcmk.files[0].path}} -i


- name: Ansible Task Block to create Linux Pacemaker cluster from AnyDB Primary node
  when: sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short
  block:

    # db2cm script must run as root
    - name: Create Linux Pacemaker cluster using db2cm
      register: __sap_ha_install_anydb_ibmdb2_config
      ansible.builtin.shell: |
        export ibmdb2_sid="{{ sap_ha_install_anydb_ibmdb2_sid }}"
        export ibmdb2_instance="db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}"
        export anydb_primary="{{ sap_ha_install_anydb_ibmdb2_hostname_primary }}"
        export anydb_secondary="{{ sap_ha_install_anydb_ibmdb2_hostname_secondary }}"
        # Assume 1 OS Network Interface until improvements can be made
        export anydb_primary_nic="{{ hostvars[sap_ha_install_anydb_ibmdb2_hostname_primary].ansible_default_ipv4.interface }}"
        export anydb_secondary_nic="{{ hostvars[sap_ha_install_anydb_ibmdb2_hostname_secondary].ansible_default_ipv4.interface }}"
        /db2/$ibmdb2_instance/sqllib/bin/db2cm -create -cluster -domain db2pcmkcluster -host $anydb_primary -publicEthernet $anydb_primary_nic -host $anydb_secondary -publicEthernet $anydb_secondary_nic -remote_cmd "ssh -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
        sleep 90
        /db2/$ibmdb2_instance/sqllib/bin/db2cm -create -instance $ibmdb2_instance -host $anydb_primary
        /db2/$ibmdb2_instance/sqllib/bin/db2cm -create -instance $ibmdb2_instance -host $anydb_secondary
        /db2/$ibmdb2_instance/sqllib/bin/db2cm -create -db $ibmdb2_sid -instance $ibmdb2_instance

    # - name: Configure Linux Pacemaker infrastructure platform resources using db2cm
    #   ansible.builtin.include_tasks: "platform/execute_db2cm_{{ __sap_ha_install_anydb_ibmdb2_platform }}.yml"


# db2cm script must run as root
- name: Verify AnyDB HA Linux Pacemaker initialisation
  register: __sap_ha_install_anydb_ibmdb2_init_check
  ansible.builtin.shell: |
    export ibmdb2_instance="db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}"
    /db2/$ibmdb2_instance/sqllib/bin/db2cm -list

- name: Display AnyDB HA config
  ansible.builtin.debug:
    msg: "{{ __sap_ha_install_anydb_ibmdb2_init_check.stdout_lines }}"
