# SPDX-License-Identifier: Apache-2.0
---

# IBM Db2 with an Integrated Cluster Manager have various options. See IBM Db2 Supported cluster management software - https://www.ibm.com/docs/en/db2/11.5?topic=clustering-supported-cluster-management-software
# IBM Db2 with “Integrated Linux Pacemaker” can use two deployment models, either High Availability and Disaster Recovery (HADR) option for Idle Standby or Mutual Failover option

# Execute IBM Db2 with “Integrated Linux Pacemaker” using Resource Agents db2ethmon, db2inst (HADR), db2hadr (HADR), db2partition and db2fs
# HA Deployment Model: High Availability and Disaster Recovery (HADR) for Idle Standby
# Configurations performed for: root OS user, IBM Db2 Database Administrator OS user (e.g. db2<db2_sid>)
# Configurations executed on: AnyDB Primary Node, AnyDB Secondary Node

# See SAP Note 1555903 - DB6: Supported IBM Db2 Database Features
# See SAP Note 3100330 - DB6: Using Db2 HADR with Pacemaker Cluster Software
# See SAP Note 3100287 - DB6: Db2 Support for Pacemaker Cluster Software
# See IBM Db2 for SAP HADR reference document referred from sap.com - https://ibm.github.io/db2-hadr-wiki/
# See Admin documentation for IBM Db2 with Integrated Cluster Manager (Linux Pacemaker) - https://www.ibm.com/docs/en/db2/11.5?topic=feature-integrated-solution-using-pacemaker
# See Installation documentation for IBM Db2 with Integrated Cluster Manager (Linux Pacemaker) - https://www.ibm.com/docs/en/db2/11.5?topic=manager-installing-pacemaker-cluster

- name: SAP HA AnyDB - IBM Db2 HADR - Collect required facts
  ansible.builtin.setup:
    gather_subset: hardware,interfaces

- name: SAP HA AnyDB - IBM Db2 HADR - Confirm IBM Db2 installation media is available
  ansible.builtin.find:
    paths: "{{ sap_ha_install_anydb_ibmdb2_software_directory }}"
    recurse: true
    file_type: file
    patterns: db2installPCMK
    excludes: bin
  register: __sap_ha_install_anydb_ibmdb2_check_install_media

- name: SAP HA AnyDB - IBM Db2 HADR - Fail if IBM Db2 installation media is not available
  ansible.builtin.fail:
    msg: IBM Db2 installation media is not available, cannot find file db2installPCMK
  when: not (__sap_ha_install_anydb_ibmdb2_check_install_media.files | length > 0)

# Determine if we are on a cloud platform.
- name: SAP HA AnyDB - IBM Db2 HADR - Include tasks for platform detection
  ansible.builtin.import_tasks: platform/ascertain_platform_type.yml

# See IBM Db2 documentation 'HADR and network address translation (NAT) support' - https://www.ibm.com/docs/en/db2/11.5?topic=support-hadr-nat
# These are the HADR Ports used for internode communication, and are unrelated to Health Check probe port from a Load Balancer
- name: SAP HA AnyDB - IBM Db2 HADR - Append IBM Db2 HA Ports to /etc/services
  ansible.builtin.lineinfile:
    path: /etc/services
    line: "{{ item }}"
    state: present
  loop:
    - "{{ sap_ha_install_anydb_ibmdb2_sid }}_HADR_1\t55001/tcp\t# DB2 HA Port 1" # DB2 HADR local service (env var db2hadrlocalsvc / HADR_LOCAL_SVC)
    - "{{ sap_ha_install_anydb_ibmdb2_sid }}_HADR_2\t55002/tcp\t# DB2 HA Port 2" # DB2 HADR remote service (env var db2hadrremotesvc / HADR_REMOTE_SVC)
  when: (sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short) or (sap_ha_install_anydb_ibmdb2_hostname_secondary == inventory_hostname_short)


# Use the IBM Db2 Command Line Processor
# See IBM Db2 for SAP HADR reference document referred from sap.com - https://ibm.github.io/db2-hadr-wiki/
- name: SAP HA AnyDB - IBM Db2 HADR - Configure Primary Node Replication
  become: true
  become_user: db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}
  args:
    executable: /bin/csh
  ansible.builtin.shell: |
    set ibmdb2_sid="{{ sap_ha_install_anydb_ibmdb2_sid }}"
    set anydb_primary="{{ sap_ha_install_anydb_ibmdb2_hostname_primary }}"
    set anydb_secondary="{{ sap_ha_install_anydb_ibmdb2_hostname_secondary }}"
    db2 UPDATE DB CFG FOR $ibmdb2_sid USING HADR_LOCAL_HOST $anydb_primary
    db2 UPDATE DB CFG FOR $ibmdb2_sid USING HADR_LOCAL_SVC "$ibmdb2_sid"_HADR_1
    db2 UPDATE DB CFG FOR $ibmdb2_sid USING HADR_REMOTE_HOST $anydb_secondary
    db2 UPDATE DB CFG FOR $ibmdb2_sid USING HADR_REMOTE_SVC "$ibmdb2_sid"_HADR_2
    db2 UPDATE DB CFG FOR $ibmdb2_sid USING HADR_REMOTE_INST db2$ibmdb2_sid
    db2 UPDATE DB CFG FOR $ibmdb2_sid USING INDEXREC RESTART LOGINDEXBUILD ON
    db2 UPDATE DB CFG FOR $ibmdb2_sid USING HADR_TIMEOUT 120
    db2 UPDATE DB CFG FOR $ibmdb2_sid USING HADR_SYNCMODE NEARSYNC
    db2 UPDATE DB CFG FOR $ibmdb2_sid USING HADR_SPOOL_LIMIT AUTOMATIC
    db2 UPDATE DB CFG FOR $ibmdb2_sid USING HADR_PEER_WINDOW 240
  when: sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short


# Use the IBM Db2 Command Line Processor
# See IBM Db2 for SAP HADR reference document referred from sap.com - https://ibm.github.io/db2-hadr-wiki/
- name: SAP HA AnyDB - IBM Db2 HADR - Configure Secondary Node
  become: true
  become_user: db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}
  args:
    executable: /bin/csh
  ansible.builtin.shell: |
    set ibmdb2_sid="{{ sap_ha_install_anydb_ibmdb2_sid }}"
    set anydb_primary="{{ sap_ha_install_anydb_ibmdb2_hostname_primary }}"
    set anydb_secondary="{{ sap_ha_install_anydb_ibmdb2_hostname_secondary }}"
    db2 UPDATE DB CFG FOR $ibmdb2_sid USING HADR_LOCAL_HOST $anydb_secondary
    db2 UPDATE DB CFG FOR $ibmdb2_sid USING HADR_LOCAL_SVC "$ibmdb2_sid"_HADR_2
    db2 UPDATE DB CFG FOR $ibmdb2_sid USING HADR_REMOTE_HOST $anydb_primary
    db2 UPDATE DB CFG FOR $ibmdb2_sid USING HADR_REMOTE_SVC "$ibmdb2_sid"_HADR_1
    db2 UPDATE DB CFG FOR $ibmdb2_sid USING HADR_REMOTE_INST db2$ibmdb2_sid
    db2 UPDATE DB CFG FOR $ibmdb2_sid USING HADR_TIMEOUT 120
    db2 UPDATE DB CFG FOR $ibmdb2_sid USING HADR_SYNCMODE NEARSYNC
    db2 UPDATE DB CFG FOR $ibmdb2_sid USING HADR_SPOOL_LIMIT AUTOMATIC
    db2 UPDATE DB CFG FOR $ibmdb2_sid USING HADR_PEER_WINDOW 240
    db2 UPDATE DB CFG FOR $ibmdb2_sid USING INDEXREC RESTART LOGINDEXBUILD ON
  when: sap_ha_install_anydb_ibmdb2_hostname_secondary == inventory_hostname_short

# Use the IBM Db2 Command Line Processor
- name: SAP HA AnyDB - IBM Db2 HADR - Rollforward Secondary Node
  become: true
  become_user: db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}
  args:
    executable: /bin/csh
  ansible.builtin.shell: |
    set ibmdb2_sid="{{ sap_ha_install_anydb_ibmdb2_sid }}"
    db2 rollforward database $ibmdb2_sid to end of logs
  when: sap_ha_install_anydb_ibmdb2_hostname_secondary == inventory_hostname_short

# Use the IBM Db2 Command Line Processor
- name: SAP HA AnyDB - IBM Db2 HADR - Start Secondary Standby Node
  become: true
  become_user: db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}
  args:
    executable: /bin/csh
  ansible.builtin.shell: |
    set ibmdb2_sid="{{ sap_ha_install_anydb_ibmdb2_sid }}"
    db2 deactivate db $ibmdb2_sid
    db2 start hadr on db $ibmdb2_sid as standby
  when: sap_ha_install_anydb_ibmdb2_hostname_secondary == inventory_hostname_short


# Use the IBM Db2 Command Line Processor
- name: SAP HA AnyDB - IBM Db2 HADR - Start Primary Node
  become: true
  become_user: db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}
  args:
    executable: /bin/csh
  ansible.builtin.shell: |
    set ibmdb2_sid="{{ sap_ha_install_anydb_ibmdb2_sid }}"
    db2 deactivate db $ibmdb2_sid
    db2 start hadr on db $ibmdb2_sid as primary
  when: sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short


- name: SAP HA AnyDB - IBM Db2 HADR - Include tasks for Passwordless SSH
  ansible.builtin.import_tasks: passwordless_ssh.yml


- name: SAP HA AnyDB - IBM Db2 HADR - Ansible Task Block for IBM Db2 “Integrated Linux Pacemaker” configuration
  when: (sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short) or (sap_ha_install_anydb_ibmdb2_hostname_secondary == inventory_hostname_short)
  block:

    # IBM Db2 LUW for SAP installation media includes already extracted Db2_*_Pacemaker_*_<<RHEL/SLES>><<pcmk_version>>_<<cpu_arch>>.tar.gz
    # Default install file is /install_media/LINUXX86_64/ESE/disk1/db2/linuxamd64/pcmk/db2installPCMK
    # Default RPM directory is /install_media/LINUXX86_64/ESE/disk1/db2/linuxamd64/pcmk/Linux
    # Default SRPM (Source) directory is /install_media/LINUXX86_64/ESE/disk1/db2/linuxamd64/pcmk/Linux/SRPMS
    - name: SAP HA AnyDB - IBM Db2 HADR - Identify IBM Db2 installation media with 'Integrated Linux Pacemaker' RPMs subdirectory
      ansible.builtin.find:
        paths: "{{ sap_ha_install_anydb_ibmdb2_software_directory }}"
        recurse: true
        file_type: file
        patterns: db2installPCMK
        excludes: bin
      register: __sap_ha_install_anydb_ibmdb2_pcmk

    - name: SAP HA AnyDB - IBM Db2 HADR - List all IBM Db2 'Integrated Linux Pacemaker' RPMs in subdirectory
      ansible.builtin.find:
        paths: "{{ (__sap_ha_install_anydb_ibmdb2_pcmk.files[0].path | dirname) + '/Linux/' + ('rhel' if ansible_os_family == 'RedHat' else 'suse' if ansible_os_family == 'Suse') }}"
        recurse: true
        file_type: file
        patterns:
          - "*.rpm"
        excludes:
          - "*debuginfo*"
          - "*debugsource*"
      register: __sap_ha_install_anydb_ibmdb2_pcmk_rpm_files

    - name: SAP HA AnyDB - IBM Db2 HADR - Install all IBM Db2 'Integrated Linux Pacemaker' RPMs for RHEL
      ansible.builtin.dnf:
        name: "{{ __sap_ha_install_anydb_ibmdb2_pcmk_rpm_files.files | map(attribute='path') | list | sort }}"
        state: present
        disable_gpg_check: true
      when: ansible_os_family == 'RedHat'

    - name: SAP HA AnyDB - IBM Db2 HADR - Install all IBM Db2 'Integrated Linux Pacemaker' RPMs for SLES
      community.general.zypper:
        name: "{{ __sap_ha_install_anydb_ibmdb2_pcmk_rpm_files.files | map(attribute='path') | list | sort }}"
        state: present
        disable_gpg_check: true
      when: ansible_os_family == 'Suse'

    # SAP Note 3100287 - DB6: Db2 Support for Pacemaker Cluster Software
    - name: SAP HA AnyDB - IBM Db2 HADR - Verify IBM Db2 'Integrated Linux Pacemaker' is installed
      register: __sap_ha_install_anydb_ibmdb2_pcmk_version_check
      ansible.builtin.shell: |
        rpm -q corosync | grep -I db2pcmk
        rpm -q pacemaker | grep -I db2pcmk
        rpm -q crmsh | grep -I db2pcmk

    - name: SAP HA AnyDB - IBM Db2 HADR - Display IBM Db2 'Integrated Linux Pacemaker' installation details
      ansible.builtin.debug:
        msg: "{{ __sap_ha_install_anydb_ibmdb2_pcmk_version_check.stdout_lines }}"

    - name: SAP HA AnyDB - IBM Db2 HADR - Identify IBM Db2 cluster manager (db2cm) utility
      ansible.builtin.find:
        paths: /db2
        recurse: true
        file_type: file
        patterns: db2cm
      register: __sap_ha_install_anydb_ibmdb2_db2cm
      failed_when: (__sap_ha_install_anydb_ibmdb2_db2cm.files | length) > 1

    - name: SAP HA AnyDB - IBM Db2 HADR - Fail if IBM Db2 cluster manager (db2cm) utility is not available
      ansible.builtin.fail:
        msg: IBM Db2 cluster manager (db2cm) utility is not available, cannot find file db2cm
      when: not (__sap_ha_install_anydb_ibmdb2_db2cm.files | length > 0)

    - name: SAP HA AnyDB - IBM Db2 HADR - Ensure directory for db2cm binary
      ansible.builtin.file:
        path: /db2/db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}/sqllib/bin
        mode: "0755"
        state: directory

    - name: SAP HA AnyDB - IBM Db2 HADR - Copy db2cm binary to binary path
      ansible.builtin.copy:
        src: "{{ __sap_ha_install_anydb_ibmdb2_db2cm.files[0].path }}"
        remote_src: true
        dest: /db2/db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}/sqllib/bin
        mode: '0755'

    # - name: SAP HA AnyDB - IBM Db2 HADR - Verify /usr/lib/ocf/resource.d/heartbeat contains Db2agents (db2hadr, db2inst, db2ethmon)

    - name: SAP HA AnyDB - IBM Db2 HADR - Execute db2installPCMK shell script
      ansible.builtin.shell: |
        {{ __sap_ha_install_anydb_ibmdb2_pcmk.files[0].path }} -i
      register: __sap_ha_install_anydb_ibmdb2_pcmk_binary_db2cppcmk_run
      failed_when: not __sap_ha_install_anydb_ibmdb2_pcmk_binary_db2cppcmk_run.rc == 0 and not 'Online Pacemaker service detected' in __sap_ha_install_anydb_ibmdb2_pcmk_binary_db2cppcmk_run.stdout

    - name: SAP HA AnyDB - IBM Db2 HADR - Identify db2cppcmk shell script
      ansible.builtin.find:
        paths: "/db2/db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}"
        recurse: true
        file_type: file
        patterns: db2cppcmk
      register: __sap_ha_install_anydb_ibmdb2_pcmk_binary_db2cppcmk

    - name: SAP HA AnyDB - IBM Db2 HADR - Fail if IBM Db2 resource agent scripts (db2cppcmk) utility is not available
      ansible.builtin.fail:
        msg: IBM Db2 resource agent scripts (db2cppcmk) utility is not available, cannot find file db2cppcmk
      when: not (__sap_ha_install_anydb_ibmdb2_pcmk_binary_db2cppcmk.files | length > 0)

    - name: SAP HA AnyDB - IBM Db2 HADR - Execute db2cppcmk shell script
      ansible.builtin.shell: |
        {{ __sap_ha_install_anydb_ibmdb2_pcmk_binary_db2cppcmk.files[0].path }} -i

    # db2cm script must run as root
    - name: SAP HA AnyDB - IBM Db2 HADR - Primary Node - Create Linux Pacemaker cluster using db2cm
      register: __sap_ha_install_anydb_ibmdb2_config1
      when:
        - sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short
      ansible.builtin.shell: |
        export ibmdb2_sid="{{ sap_ha_install_anydb_ibmdb2_sid }}"
        export ibmdb2_instance="db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}"
        export anydb_primary="{{ sap_ha_install_anydb_ibmdb2_hostname_primary }}"
        export anydb_secondary="{{ sap_ha_install_anydb_ibmdb2_hostname_secondary }}"

        # Assume 1 OS Network Interface until improvements can be made
        export anydb_primary_nic="{{ hostvars[sap_ha_install_anydb_ibmdb2_hostname_primary].ansible_default_ipv4.interface }}"
        export anydb_secondary_nic="{{ hostvars[sap_ha_install_anydb_ibmdb2_hostname_secondary].ansible_default_ipv4.interface }}"

        /db2/$ibmdb2_instance/sqllib/bin/db2cm -create -cluster -domain db2pcmkcluster -host $anydb_primary -publicEthernet $anydb_primary_nic -host $anydb_secondary -publicEthernet $anydb_secondary_nic -remote_cmd "ssh -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
      failed_when: not __sap_ha_install_anydb_ibmdb2_config1.rc == 0 and not 'make sure there is no cluster on any of the hosts' in __sap_ha_install_anydb_ibmdb2_config1.stdout

    # db2cm script must run as root
    # Setting to be performed on both Primary and Secondary node
    - name: SAP HA AnyDB - IBM Db2 HADR - Primary Node - Update corosync totem token timeout after creating cluster
      register: __sap_ha_install_anydb_ibmdb2_config1
      # when:
      #   - sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short
      ansible.builtin.shell: |
        sed -i 's/token: 10000/token: 30000/g' /etc/corosync/corosync.conf
      failed_when: not __sap_ha_install_anydb_ibmdb2_config1.rc == 0 and not 'make sure there is no cluster on any of the hosts' in __sap_ha_install_anydb_ibmdb2_config1.stdout

    # db2cm script must run as root
    - name: SAP HA AnyDB - IBM Db2 HADR - Primary Node - Create Primary Node instance config in Linux Pacemaker cluster using db2cm
      register: __sap_ha_install_anydb_ibmdb2_config2
      when:
        - sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short
      ansible.builtin.shell: |
        export ibmdb2_instance="db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}"
        export anydb_primary="{{ sap_ha_install_anydb_ibmdb2_hostname_primary }}"
        /db2/$ibmdb2_instance/sqllib/bin/db2cm -create -instance $ibmdb2_instance -host $anydb_primary
      failed_when: not __sap_ha_install_anydb_ibmdb2_config2.rc == 0 and not 'already exists in the resource model' in __sap_ha_install_anydb_ibmdb2_config2.stdout

    # db2cm script must run as root
    - name: SAP HA AnyDB - IBM Db2 HADR - Primary Node - Create Secondary Node instance config in Linux Pacemaker cluster using db2cm
      register: __sap_ha_install_anydb_ibmdb2_config3
      when:
        - sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short
      ansible.builtin.shell: |
        export ibmdb2_instance="db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}"
        export anydb_secondary="{{ sap_ha_install_anydb_ibmdb2_hostname_secondary }}"
        /db2/$ibmdb2_instance/sqllib/bin/db2cm -create -instance $ibmdb2_instance -host $anydb_secondary
      failed_when: not __sap_ha_install_anydb_ibmdb2_config3.rc == 0 and not 'already exists in the resource model' in __sap_ha_install_anydb_ibmdb2_config3.stdout

    # Use the IBM Db2 Command Line Processor
    # Setting to be performed on both Primary and Secondary node
    - name: SAP HA AnyDB - IBM Db2 HADR - Primary Node - Update IBM Db2 HADR config with greater timeout allowance using db2cm
      register: __sap_ha_install_anydb_ibmdb2_config5
      # when:
      #   - sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short
      become: true
      become_user: db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}
      args:
        executable: /bin/csh
      ansible.builtin.shell: |
        set ibmdb2_sid="{{ sap_ha_install_anydb_ibmdb2_sid }}"
        db2 UPDATE DB CFG FOR $ibmdb2_sid using HADR_PEER_WINDOW 300
      failed_when: not __sap_ha_install_anydb_ibmdb2_config5.rc == 0 and not 'command completed successfully' in __sap_ha_install_anydb_ibmdb2_config5.stdout

    # Use the IBM Db2 Command Line Processor
    # Address SQL1363W - database must be shutdown and reactivated before the configuration parameter changes become effective
    - name: SAP HA AnyDB - IBM Db2 HADR - Primary and Secondary Node - Shutdown and Reactivate
      register: __sap_ha_install_anydb_ibmdb2_config5
      # when:
      #   - sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short
      become: true
      become_user: db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}
      args:
        executable: /bin/csh
      ansible.builtin.shell: |
        set ibmdb2_sid="{{ sap_ha_install_anydb_ibmdb2_sid }}"
        db2 deactivate db $ibmdb2_sid
        db2 activate db $ibmdb2_sid
      failed_when: not __sap_ha_install_anydb_ibmdb2_config5.rc == 0 and not 'command completed successfully' in __sap_ha_install_anydb_ibmdb2_config5.stdout

    # db2cm script must run as root
    # Ensure parameter HADR_PEER_WINDOW is set, otherwise will clustering-supported-cluster-management-software
    # "Error: Please configure HADR_PEER_WINDOW for <db_sid> on instance <db_instance> on <db_host> to a value of at least 60 seconds."
    - name: SAP HA AnyDB - IBM Db2 HADR - Primary Node - Create IBM Db2 RDBMS instance config in Linux Pacemaker cluster using db2cm
      register: __sap_ha_install_anydb_ibmdb2_config4
      when:
        - sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short
      ansible.builtin.shell: |
        export ibmdb2_sid="{{ sap_ha_install_anydb_ibmdb2_sid }}"
        export ibmdb2_instance="db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}"
        /db2/$ibmdb2_instance/sqllib/bin/db2cm -create -db $ibmdb2_sid -instance $ibmdb2_instance
      failed_when: not __sap_ha_install_anydb_ibmdb2_config4.rc == 0 and not 'already exists in the resource model' in __sap_ha_install_anydb_ibmdb2_config4.stdout

    - name: SAP HA AnyDB - IBM Db2 HADR - Configure Linux Pacemaker on target infrastructure platform using db2cm
      ansible.builtin.include_tasks: "platform/db2cm_{{ __sap_ha_install_anydb_ibmdb2_platform }}.yml"

# end of block


- name: SAP HA AnyDB - IBM Db2 HADR - Verify crm for IBM Db2 HA Linux Pacemaker initialisation 
  register: __sap_ha_install_anydb_ibmdb2_pcmk_check
  when:
    - sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short
  ansible.builtin.shell: |
    crm --display=plain configure show
    echo -e "\n\n"
    crm --display=plain status full

# db2cm script must run as root
- name: SAP HA AnyDB - IBM Db2 HADR - Verify db2cm for IBM Db2 HA Linux Pacemaker initialisation
  register: __sap_ha_install_anydb_ibmdb2_init_check
  when:
    - sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short
  ansible.builtin.shell: |
    export ibmdb2_instance="db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}"
    /db2/$ibmdb2_instance/sqllib/bin/db2cm -list

# Use the IBM Db2 Command Line Processor
- name: SAP HA AnyDB - IBM Db2 HADR - Verify IBM Db2 HADR configuration
  register: __sap_ha_install_anydb_ibmdb2_hadr_config
  become: true
  become_user: db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}
  args:
    executable: /bin/csh
  when:
    - sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short
  ansible.builtin.shell: |
    set ibmdb2_sid="{{ sap_ha_install_anydb_ibmdb2_sid }}"
    db2 get db cfg for $ibmdb2_sid | grep 'Rollforward\|HADR'

# Use the IBM Db2 Command Line Processor
- name: SAP HA AnyDB - IBM Db2 HADR - Verify IBM Db2 HADR status
  register: __sap_ha_install_anydb_ibmdb2_hadr_status
  become: true
  become_user: db2{{ sap_ha_install_anydb_ibmdb2_sid | lower }}
  args:
    executable: /bin/csh
  when:
    - sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short
  ansible.builtin.shell: |
    set ibmdb2_sid="{{ sap_ha_install_anydb_ibmdb2_sid }}"
    db2pd -hadr -db $ibmdb2_sid

- name: SAP HA AnyDB - IBM Db2 HADR - Display crm for IBM Db2 HA Linux Pacemaker initialisation
  when:
    - sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short
  ansible.builtin.debug:
    msg: "{{ __sap_ha_install_anydb_ibmdb2_pcmk_check.stdout_lines }}"

- name: SAP HA AnyDB - IBM Db2 HADR - Display db2cm for IBM Db2 HA Linux Pacemaker initialisation
  when:
    - sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short
  ansible.builtin.debug:
    msg: "{{ __sap_ha_install_anydb_ibmdb2_init_check.stdout_lines }}"

- name: SAP HA AnyDB - IBM Db2 HADR - Display IBM Db2 HADR configuration
  when:
    - sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short
  ansible.builtin.debug:
    msg: "{{ __sap_ha_install_anydb_ibmdb2_hadr_config.stdout_lines }}"

- name: SAP HA AnyDB - IBM Db2 HADR - Display IBM Db2 HADR status
  when:
    - sap_ha_install_anydb_ibmdb2_hostname_primary == inventory_hostname_short
  ansible.builtin.debug:
    msg: "{{ __sap_ha_install_anydb_ibmdb2_hadr_status.stdout_lines }}"
